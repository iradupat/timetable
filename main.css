@import url(https://fonts.googleapis.com/css?family=Merriweather+Sans);

* {margin: 0; padding: 0;}

/* html, body {min-height: 100%;} */

body {
	text-align: center;
	padding-top: 10px;
	background: #689976;
	background: linear-gradient(#689976, #ACDACC);
	font-family: 'Merriweather Sans', arial, verdana;
}

.breadcrumb {
	/*centering*/
	display: inline-block;
	box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.35);
	overflow: hidden;
	border-radius: 5px;
	/*Lets add the numbers for each link using CSS counters. flag is the name of the counter. to be defined using counter-reset in the parent element of the links*/
	counter-reset: flag; 
}

.breadcrumb a {
	text-decoration: none;
	outline: none;
	display: block;
	float: left;
	font-size: 12px;
	line-height: 36px;
	color: white;
	/*need more margin on the left of links to accomodate the numbers*/
	padding: 0 10px 0 60px;
	background: #666;
	background: linear-gradient(#666, #333);
	position: relative;
}
/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.breadcrumb a:first-child {
	padding-left: 46px;
	border-radius: 5px 0 0 5px; /*to match with the parent's radius*/
}
.breadcrumb a:first-child:before {
	left: 14px;
}
.breadcrumb a:last-child {
	border-radius: 0 5px 5px 0; /*this was to prevent glitches on hover*/
	padding-right: 20px;
}

/*hover/active styles*/
.breadcrumb a.active, .breadcrumb a:hover{
	background: #333;
	background: linear-gradient(#333, #000);
}
.breadcrumb a.active:after, .breadcrumb a:hover:after {
	background: #333;
	background: linear-gradient(135deg, #333, #000);
}

/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
.breadcrumb a:after {
	content: '';
	position: absolute;
	top: 0; 
	right: -18px; /*half of square's length*/
	/*same dimension as the line-height of .breadcrumb a */
	width: 36px; 
	height: 36px;
	/*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's: 
	length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
	if diagonal required = 1; length = 1/1.414 = 0.707*/
	transform: scale(0.707) rotate(45deg);
	/*we need to prevent the arrows from getting buried under the next link*/
	z-index: 1;
	/*background same as links but the gradient will be rotated to compensate with the transform applied*/
	background: #666;
	background: linear-gradient(135deg, #666, #333);
	/*stylish arrow design using box shadow*/
	box-shadow: 
		2px -2px 0 2px rgba(0, 0, 0, 0.4), 
		3px -3px 0 2px rgba(255, 255, 255, 0.1);
	/*
		5px - for rounded arrows and 
		50px - to prevent hover glitches on the border created using shadows*/
	border-radius: 0 5px 0 50px;
}
/*we dont need an arrow after the last link*/
.breadcrumb a:last-child:after {
	content: none;
}
/*we will use the :before element to show numbers*/
.breadcrumb a:before {
	content: counter(flag);
	counter-increment: flag;
	/*some styles now*/
	border-radius: 100%;
	width: 20px;
	height: 20px;
	line-height: 20px;
	margin: 8px 0;
	position: absolute;
	top: 0;
	left: 30px;
	background: #444;
	background: linear-gradient(#444, #222);
	font-weight: bold;
}


.flat a, .flat a:after {
	background: white;
	color: black;
	transition: all 0.5s;
}
.flat a:before {
	background: white;
	box-shadow: 0 0 0 1px #ccc;
}
.flat a:hover, .flat a.active, 
.flat a:hover:after, .flat a.active:after{
	background: #9EEB62;
}




.main{
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}
.table{
  display: flex;
  flex-direction: column;
  border: black 1px solid;
  color: #fff;
  /* align-items: center; */
  /* justify-content: center; */
  /* background-color: red; */
  width: 60%;
}

.header{
  display: flex;
  background-color: rgb(77, 80, 77);
  flex: 1;
  color: white;
  font-weight: bold;
  font-size: 18px;
  text-transform: uppercase;
  min-height: 10vh;
}

.row{
  display: flex;
  flex: 1;
  min-height: 10vh;
  /* align-items: center; */
  border:solid black 1px;
  border-left: none;
  border-right: none;
  /* border-bottom: none; */
  /* border-top: none; */
  /* background-color: gray; */
}

.row-5{
  /* border-right: solid black 1px !important; */

}

.cell{
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;
  border-right: solid black 1px;
}

.cell:active{
  /* font-size: 20px; */
  background-color: rgb(207, 189, 189);

}

.cell-text-input{
  border: none;
  width: 100%;
  text-align: center;
  height: 50%;
  outline-width: 0px;
  font-size: 15px;
  font-weight: 500;
  cursor: pointer;

}

.cell-text-input:active{
  background-color: rgb(207, 189, 189);
}

.cell-5, .h-col-5{
  border-right: none;
}



/* The Modal (background) */
.modal {
  /* display: none; Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  padding-top: 100px; /* Location of the box */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 60%;
}

/* The Close Button */
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}

input{
  background-color: #ACDACC;
  color: rgb(41, 40, 40);
  font-weight: bold;
}
.navigation{
  padding-left: 20px;
  padding-right: 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-height: 70px;
}

h2{
  color: #fff;
  cursor: pointer;
}

.cell-form{
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
}

#text-hours{
  background-color: #fff;
  height: 32px;
  width: 150px;
  outline: none;
  padding: 5px;
  margin-bottom: 5px;
  border: 1px solid rgb(104, 103, 103);
}

.cell-form > select{
  width: 160px;
  height: 32px;
  margin-bottom: 10px;
}
.btn:active{
  background-color: rgb(55, 55, 189);
}
.btn{
  border: none;
  cursor: pointer;
  margin-top: 5px;
  width: 160px;
  height: 30px;
  color: white;
  background-color: rgb(85, 85, 240);
}

.line{
  text-decoration: line-through;
}
.cell-0{
  background-color: #689976;
}

label{
  font-size: 13px !important;
}

.finished{
  width: 160px;
  /* background-color: green; */
  text-align: left;
}

.finished > label{
  margin-right: 5px;
}